import Head from "next/head";
import { useForm } from "@mantine/form";

import {
  Paper,
  TextInput,
  PasswordInput,
  Button,
  Title,
  Input,
} from "@mantine/core";

import useStyles from "./style";
import { useRouter } from "next/router";
import { useDispatch, useSelector } from "react-redux";
import { fetchUser } from "../redux/reducers/user/reducer";
import { useEffect } from "react";

export default function Home() {
  const { classes } = useStyles();
  const router = useRouter();
  const rdxState = useSelector((state) => state.user.user)
  const dispatch = useDispatch();

  useEffect(() => {
    const token = localStorage.getItem("token");

    if (token) {
      router.push("/home");
    }
  });

  const form = useForm({
    validateInputOnChange: true,
    initialValues: {
      email: "",
      password: "",
    },

    validate: {
      email: (val) => (/^\S+@\S+$/.test(val) ? null : "Invalid email"),
      password: (val) => (val.length <= 0 ? "Password is Required" : null),
    },
  });

  const handleSubmit = (values) => {
    const login = {
      password: values.password,
      u_email: values.email,
    };

    dispatch(fetchUser(login));
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className={classes.wrapper}>
          <form
            onSubmit={form.onSubmit((values) => {
              handleSubmit(values);
            })}
          >
            <Paper className={classes.form} radius={0} p={30}>
              <Title
                order={2}
                className={classes.title}
                align="center"
                mt="md"
                mb={50}
              >
                Welcome to JB Software!
              </Title>

              <Input.Label size="md" mb={7} required>
                Email
              </Input.Label>
              <TextInput
                size="md"
                // label="Username"
                placeholder="Email"
                value={form.values.email}
                onChange={(event) =>
                  form.setFieldValue("email", event.currentTarget.value)
                }
                error={form.errors.email && form.errors.email}
              />

              <Input.Label size="md" mb={7} mt={10} required>
                Password
              </Input.Label>
              <PasswordInput
                size="md"
                // label="Password"
                placeholder="Password"
                value={form.values.password}
                onChange={(event) =>
                  form.setFieldValue("password", event.currentTarget.value)
                }
                error={form.errors.password && form.errors.password}
              />
              <Button fullwidth="true" type="submit" mt="xl" size="md">
                Login
              </Button>
            </Paper>
          </form>
        </div>
      </main>
    </div>
  );
}
